ストラングラーパターンによるマイクロサービスマイグレーションの勘所
オイシックス　川上徹さん

https://speakerdeck.com/kawakamitor/jjug-ccc-2019-spring

・スケーラビリティ
　→アクセス増大に耐えられない
・デリバリースピード
　→
・テスタビリティ
　→テストが書きにくい動いてない。


CDNで既存かAzureに振り分ける
　→Azure の API Gateway Service

Strangler Pattern
　機能を段階的に移行していきましょう


3つの観点
・機能分離→データベース分離
　マイクロサービス化するときにデータベースも分離する

　スケーラビリティを阻害している部分（改善効果の高い部分）から修正
　ドメイン定義を慎重に（ビジネスによるから正解はないのでは？という話だった）

・バッチ処理

　分割の仕方
　・Http Requests？
　・Batch Framework？
　・非効率な処理を見直す


・ステートレス化


環境追加が容易な環境

