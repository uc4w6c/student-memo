@kawanamiyuu

ラクス

https://speakerdeck.com/kawanamiyuu/jjug-ccc-2020-fall


## アーキテクチャ選択における課題感
- 業務ドメインの知識が足りず、適切な粒度のサービス分割が難しい

- そもそも売れるかわからない、仮説検証を高速にまわしていかなければならない段階だと、開発・運用するオーバーヘッドが大きい

- 手段が目的化している感

## モノリスあるある、とアーキテクチャ設計という営みの課題
### モノリスあるある
- 適切なモジュール分割を実現するためにDDDやクリーンアーキテクチャ
- あとから分割すれば良いと開発を始めたモノリスでいざ分割を検討する段階でアプリケーション内の


## アーキテクトの悩み
- 開発初期に検討した設計が泥団子
- 


## メンバーの悩み
- どのパッケージにクラスを置いたらいいか毎回迷う
- ルールがドキュメントされていない
- ソースコードがどうあればアーキテクトされた状態かわからない

## 悩みの原因
- 属人化
- 暗黙知か
- 知っている人が人力チェック
- 知らないとチェックをすり抜ける

## アーキテクチャの正体
- ソフトウェア構造についての取り決め
- 責務や関心ごとの「依存関係」についての取り決め
- DDDやクリーンアーキテクチャも依存関係を適切に設計したいだけ

## アーキテクチャの問題点
ガイドラインというものの性質
- ガイドラインとは指針、ルール、マナー
- 人が決めて、守る
- 最初にルールを作るのは簡単
- ルール通り作り始めるのも簡単

### 何が難しいのか
アーキテクチャの維持が難しい、壊れやすい

## アーキテクチャをテストしたい
ArchUnit

https://github.com/TNG/ArchUnit-Examples

## アーキテクチャのテスト




